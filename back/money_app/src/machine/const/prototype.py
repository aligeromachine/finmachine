#!/usr/bin/env python

from dataclasses import dataclass
import re
import argparse

NULL_REX: str = r'.*'

@dataclass
class HashInfo:
    algorithm: str
    verifier_regexp: str
    hashcat: int
    john: str | None


# flake8: noqa
HASH_PROTOTYPES: list[HashInfo] = [
    HashInfo(algorithm="WPA-EAPOL-PBKDF2", verifier_regexp=NULL_REX, hashcat=22000, john=None),
    HashInfo(algorithm="WPA-EAPOL-PMK", verifier_regexp=NULL_REX, hashcat=22001, john=None),
    HashInfo(algorithm="Password Safe v3", verifier_regexp=NULL_REX, hashcat=5200, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ PBKDF2-HMAC-RIPEMD160 + AES (legacy)", verifier_regexp=NULL_REX, hashcat=6211, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ PBKDF2-HMAC-RIPEMD160 + Serpent (legacy)", verifier_regexp=NULL_REX, hashcat=6211, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ PBKDF2-HMAC-RIPEMD160 + Twofish (legacy)", verifier_regexp=NULL_REX, hashcat=6211, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ PBKDF2-HMAC-RIPEMD160 + AES-Twofish (legacy)", verifier_regexp=NULL_REX, hashcat=6212, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ PBKDF2-HMAC-RIPEMD160 + AES-Twofish-Serpent (legacy)", verifier_regexp=NULL_REX, hashcat=6213, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ PBKDF2-HMAC-RIPEMD160 + Serpent-AES (legacy)", verifier_regexp=NULL_REX, hashcat=6212, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ PBKDF2-HMAC-RIPEMD160 + Serpent-Twofish-AES (legacy)", verifier_regexp=NULL_REX, hashcat=6213, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ PBKDF2-HMAC-RIPEMD160 + Twofish-Serpent (legacy)", verifier_regexp=NULL_REX, hashcat=6212, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ SHA512 + AES (legacy)", verifier_regexp=NULL_REX, hashcat=6221, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ SHA512 + Serpent (legacy)", verifier_regexp=NULL_REX, hashcat=6221, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ SHA512 + Twofish (legacy)", verifier_regexp=NULL_REX, hashcat=6221, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ SHA512 + AES-Twofish (legacy)", verifier_regexp=NULL_REX, hashcat=6222, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ SHA512 + AES-Twofish-Serpent (legacy)", verifier_regexp=NULL_REX, hashcat=6223, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ SHA512 + Serpent-AES (legacy)", verifier_regexp=NULL_REX, hashcat=6222, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ SHA512 + Serpent-Twofish-AES (legacy)", verifier_regexp=NULL_REX, hashcat=6223, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ SHA512 + Twofish-Serpent (legacy)", verifier_regexp=NULL_REX, hashcat=6222, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ Whirlpool + AES (legacy)", verifier_regexp=NULL_REX, hashcat=6231, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ Whirlpool + Serpent (legacy)", verifier_regexp=NULL_REX, hashcat=6231, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ Whirlpool + Twofish (legacy)", verifier_regexp=NULL_REX, hashcat=6231, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ Whirlpool + AES-Twofish (legacy)", verifier_regexp=NULL_REX, hashcat=6232, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ Whirlpool + AES-Twofish-Serpent (legacy)", verifier_regexp=NULL_REX, hashcat=6233, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ Whirlpool + Serpent-AES (legacy)", verifier_regexp=NULL_REX, hashcat=6232, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ Whirlpool + Serpent-Twofish-AES (legacy)", verifier_regexp=NULL_REX, hashcat=6233, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ Whirlpool + Twofish-Serpent (legacy)", verifier_regexp=NULL_REX, hashcat=6232, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ PBKDF2-HMAC-RIPEMD160 + AES + boot (legacy)", verifier_regexp=NULL_REX, hashcat=6241, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ PBKDF2-HMAC-RIPEMD160 + Serpent + boot (legacy)", verifier_regexp=NULL_REX, hashcat=6241, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ PBKDF2-HMAC-RIPEMD160 + Twofish + boot (legacy)", verifier_regexp=NULL_REX, hashcat=6241, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ PBKDF2-HMAC-RIPEMD160 + AES-Twofish + boot (legacy)", verifier_regexp=NULL_REX, hashcat=6242, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ PBKDF2-HMAC-RIPEMD160 + AES-Twofish-Serpent + boot (legacy)", verifier_regexp=NULL_REX, hashcat=6243, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ PBKDF2-HMAC-RIPEMD160 + Serpent-AES + boot (legacy)", verifier_regexp=NULL_REX, hashcat=6242, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ PBKDF2-HMAC-RIPEMD160 + Serpent-Twofish-AES + boot (legacy)", verifier_regexp=NULL_REX, hashcat=6243, john=None),
    HashInfo(algorithm="TrueCrypt 5.0+ PBKDF2-HMAC-RIPEMD160 + Twofish-Serpent + boot (legacy)", verifier_regexp=NULL_REX, hashcat=6242, john=None),
    HashInfo(algorithm="Password Safe v2", verifier_regexp=NULL_REX, hashcat=9000, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-RIPEMD160 + AES (legacy)", verifier_regexp=NULL_REX, hashcat=13711, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-RIPEMD160 + AES-Twofish (legacy)", verifier_regexp=NULL_REX, hashcat=13712, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-RIPEMD160 + Serpent (legacy)", verifier_regexp=NULL_REX, hashcat=13711, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-RIPEMD160 + Serpent-AES (legacy)", verifier_regexp=NULL_REX, hashcat=13712, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-RIPEMD160 + Serpent-Twofish-AES (legacy)", verifier_regexp=NULL_REX, hashcat=13713, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-RIPEMD160 + Twofish (legacy)", verifier_regexp=NULL_REX, hashcat=13711, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-RIPEMD160 + Twofish-Serpent (legacy)", verifier_regexp=NULL_REX, hashcat=13712, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-SHA256 + AES (legacy)", verifier_regexp=NULL_REX, hashcat=13751, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-SHA256 + AES-Twofish (legacy)", verifier_regexp=NULL_REX, hashcat=13752, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-SHA256 + Serpent (legacy)", verifier_regexp=NULL_REX, hashcat=13751, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-SHA256 + Serpent-AES (legacy)", verifier_regexp=NULL_REX, hashcat=13752, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-SHA256 + Serpent-Twofish-AES (legacy)", verifier_regexp=NULL_REX, hashcat=13753, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-SHA256 + Twofish (legacy)", verifier_regexp=NULL_REX, hashcat=13751, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-SHA256 + Twofish-Serpent (legacy)", verifier_regexp=NULL_REX, hashcat=13752, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-SHA512 + AES (legacy)", verifier_regexp=NULL_REX, hashcat=13721, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-SHA512 + AES-Twofish (legacy)", verifier_regexp=NULL_REX, hashcat=13722, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-SHA512 + Serpent (legacy)", verifier_regexp=NULL_REX, hashcat=13721, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-SHA512 + Serpent-AES (legacy)", verifier_regexp=NULL_REX, hashcat=13722, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-SHA512 + Serpent-Twofish-AES (legacy)", verifier_regexp=NULL_REX, hashcat=13723, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-SHA512 + Twofish (legacy)", verifier_regexp=NULL_REX, hashcat=13721, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-SHA512 + Twofish-Serpent (legacy)", verifier_regexp=NULL_REX, hashcat=13722, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-Whirlpool + AES (legacy)", verifier_regexp=NULL_REX, hashcat=13731, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-Whirlpool + AES-Twofish (legacy)", verifier_regexp=NULL_REX, hashcat=13732, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-Whirlpool + Serpent (legacy)", verifier_regexp=NULL_REX, hashcat=13731, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-Whirlpool + Serpent-AES (legacy)", verifier_regexp=NULL_REX, hashcat=13732, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-Whirlpool + Serpent-Twofish-AES (legacy)", verifier_regexp=NULL_REX, hashcat=13733, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-Whirlpool + Twofish (legacy)", verifier_regexp=NULL_REX, hashcat=13731, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-Whirlpool + Twofish-Serpent (legacy)", verifier_regexp=NULL_REX, hashcat=13732, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-RIPEMD160 + boot-mode + AES (legacy)", verifier_regexp=NULL_REX, hashcat=13741, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-RIPEMD160 + boot-mode + AES-Twofish (legacy)", verifier_regexp=NULL_REX, hashcat=13742, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-RIPEMD160 + boot-mode + AES-Twofish-Serpent (legacy)", verifier_regexp=NULL_REX, hashcat=13743, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-SHA256 + boot-mode + Twofish (legacy)", verifier_regexp=NULL_REX, hashcat=13761, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-SHA256 + boot-mode + Serpent-AES (legacy)", verifier_regexp=NULL_REX, hashcat=13762, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-SHA256 + boot-mode + Serpent-Twofish-AES (legacy)", verifier_regexp=NULL_REX, hashcat=13763, john=None),
    HashInfo(algorithm="VeraCrypt PBKDF2-HMAC-SHA256 + boot-mode + PIM + AES (legacy)", verifier_regexp=NULL_REX, hashcat=13761, john=None),
    HashInfo(algorithm="VeraCrypt Streebog-512 + XTS 512 bit (legacy)", verifier_regexp=NULL_REX, hashcat=13771, john=None),
    HashInfo(algorithm="VeraCrypt Streebog-512 + XTS 1024 bit (legacy)", verifier_regexp=NULL_REX, hashcat=13772, john=None),
    HashInfo(algorithm="VeraCrypt Streebog-512 + XTS 1536 bit (legacy)", verifier_regexp=NULL_REX, hashcat=13773, john=None),
    HashInfo(algorithm="VeraCrypt Streebog-512 + XTS 512 bit + boot-mode (legacy)", verifier_regexp=NULL_REX, hashcat=13781, john=None),
    HashInfo(algorithm="VeraCrypt Streebog-512 + XTS 1024 bit + boot-mode (legacy)", verifier_regexp=NULL_REX, hashcat=13782, john=None),
    HashInfo(algorithm="VeraCrypt Streebog-512 + XTS 1536 bit + boot-mode (legacy)", verifier_regexp=NULL_REX, hashcat=13783, john=None),
    HashInfo(algorithm="LUKS v1 (legacy)", verifier_regexp=NULL_REX, hashcat=14600, john=None),
    HashInfo(algorithm="DiskCryptor SHA512 + XTS 512 bit (AES)", verifier_regexp=NULL_REX, hashcat=20011, john=None),
    HashInfo(algorithm="DiskCryptor SHA512 + XTS 512 bit (Twofish)", verifier_regexp=NULL_REX, hashcat=20011, john=None),
    HashInfo(algorithm="DiskCryptor SHA512 + XTS 512 bit (Serpent)", verifier_regexp=NULL_REX, hashcat=20011, john=None),
    HashInfo(algorithm="DiskCryptor SHA512 + XTS 1024 bit (AES-Twofish)", verifier_regexp=NULL_REX, hashcat=20012, john=None),
    HashInfo(algorithm="DiskCryptor SHA512 + XTS 1024 bit (Twofish-Serpent)", verifier_regexp=NULL_REX, hashcat=20012, john=None),
    HashInfo(algorithm="DiskCryptor SHA512 + XTS 1024 bit (Serpent-AES)", verifier_regexp=NULL_REX, hashcat=20012, john=None),
    HashInfo(algorithm="DiskCryptor SHA512 + XTS 1536 bit (AES-Twofish-Serpent)", verifier_regexp=NULL_REX, hashcat=20013, john=None),
    HashInfo(algorithm="LUKS v1 SHA-1 + AES", verifier_regexp=NULL_REX, hashcat=29511, john=None),
    HashInfo(algorithm="LUKS v1 SHA-1 + Serpent", verifier_regexp=NULL_REX, hashcat=29512, john=None),
    HashInfo(algorithm="LUKS v1 SHA-1 + Twofish", verifier_regexp=NULL_REX, hashcat=29513, john=None),
    HashInfo(algorithm="LUKS v1 SHA-256 + AES", verifier_regexp=NULL_REX, hashcat=29521, john=None),
    HashInfo(algorithm="LUKS v1 SHA-256 + Serpent", verifier_regexp=NULL_REX, hashcat=29522, john=None),
    HashInfo(algorithm="LUKS v1 SHA-256 + Twofish", verifier_regexp=NULL_REX, hashcat=29523, john=None),
    HashInfo(algorithm="LUKS v1 SHA-512 + AES", verifier_regexp=NULL_REX, hashcat=29531, john=None),
    HashInfo(algorithm="LUKS v1 SHA-512 + Serpent", verifier_regexp=NULL_REX, hashcat=29532, john=None),
    HashInfo(algorithm="LUKS v1 SHA-512 + Twofish", verifier_regexp=NULL_REX, hashcat=29533, john=None),
    HashInfo(algorithm="LUKS v1 RIPEMD-160 + AES", verifier_regexp=NULL_REX, hashcat=29541, john=None),
    HashInfo(algorithm="LUKS v1 RIPEMD-160 + Serpent", verifier_regexp=NULL_REX, hashcat=29542, john=None),
    HashInfo(algorithm="LUKS v1 RIPEMD-160 + Twofish", verifier_regexp=NULL_REX, hashcat=29543, john=None),
    HashInfo(algorithm="bcrypt(md5($pass)) / bcryptmd5", verifier_regexp=r'^\$2[axyb]?\$[0-9]{2}\$[a-zA-Z0-9\./]{53}$', hashcat=25600, john=None),
    HashInfo(algorithm="bcrypt(sha1($pass)) / bcryptsha1", verifier_regexp=r'^\$2[axyb]?\$[0-9]{2}\$[a-zA-Z0-9\./]{53}$', hashcat=25800, john=None),
    HashInfo(algorithm="bcrypt(sha512($pass)) / bcryptsha512", verifier_regexp=r'^\$2[axyb]?\$[0-9]{2}\$[a-zA-Z0-9\./]{53}$', hashcat=28400, john=None),
    HashInfo(algorithm="phpass, phpBB3 (MD5)", verifier_regexp=r'^\$H\$[a-zA-Z0-9/\.]{31}$', hashcat=400, john='phpass'),
    HashInfo(algorithm='1Password, agilekeychain', verifier_regexp=r'^[0-9]{4}:[a-f0-9]{16}:[a-f0-9]{2080}$', hashcat=6600, john=None),
    HashInfo(algorithm='1Password, cloudkeychain', verifier_regexp=r'^[a-f0-9]{64}:[a-f0-9]{32}:[0-9]{5}:[a-f0-9]{608}$', hashcat=8200, john=None),
    HashInfo(algorithm='7-Zip', verifier_regexp=NULL_REX, hashcat=11600, john='7z'),
    HashInfo(algorithm='AIX {smd5}', verifier_regexp=r'^smd5[a-zA-Z0-9/\.]{8}\$[a-zA-Z0-9/\.]{22}$', hashcat=6300, john='aix-smd5'),
    HashInfo(algorithm='AIX {ssha1}', verifier_regexp=r'^ssha1[0-9]{2}\$[a-zA-Z0-9/\.]{16}\$[a-zA-Z0-9/\.]{27}$', hashcat=6700, john='aix-ssha1'),
    HashInfo(algorithm='AIX {ssha256}', verifier_regexp=r'^ssha256[0-9]{2}\$[a-zA-Z0-9\./]{16}\$[a-zA-Z0-9/\.]{43}$', hashcat=6400, john='aix-ssha256'),
    HashInfo(algorithm='AIX {ssha512}', verifier_regexp=r'^ssha512[0-9]{2}\$[a-zA-Z0-9/\.]{16,48}\$[a-zA-Z0-9\/\.]{86}$', hashcat=6500, john='aix-ssha512'),
    HashInfo(algorithm='Android Backup', verifier_regexp=r'\\$ab\\$[0-9]{1}\\*[0-9]{1}\\*[0-9]{1,6}\\*[a-f0-9]{128}\\*[a-f0-9]{128}\\*[a-f0-9]{32}\\*[a-f0-9]{192}', hashcat=18900, john='androidbackup'),
    HashInfo(algorithm='Android FDE <= 4.3', verifier_regexp=r'^\\$fde\\$[0-9]{2}\\$[a-f0-9]{32}\\$[0-9]{2}\\$[a-f0-9]{32}\\$[a-f0-9]{3072}$', hashcat=8800, john='fde'),
    HashInfo(algorithm='Samsung Android Password/PIN', verifier_regexp=r'^[a-f0-9]{40}:[a-f0-9]{16}$', hashcat=5800, john=None),
    HashInfo(algorithm='Apache $apr1$ MD5, md5apr1, MD5 (APR)', verifier_regexp=r'^\$apr1\$[a-zA-Z0-9/\.]{0,8}\$[a-zA-Z0-9/\.]{22}$', hashcat=1600, john=None),
    HashInfo(algorithm='BLAKE2b-512', verifier_regexp=r'\\$BLAKE2\\$[a-f0-9]{128}', hashcat=600, john=None),
    HashInfo(algorithm='BSDi Crypt, Extended DES', verifier_regexp=r'^_[a-zA-Z0-9/\.]{19}$', hashcat=12400, john='bsdicrypt'),
    HashInfo(algorithm='BitLocker', verifier_regexp=r'\\$bitlocker\\$[0-9]\\$[0-9]{2}\\$[a-f0-9]{32}\\$[a-f0-9]{7}\\$[a-f0-9]{2}\\$[a-f0-9]{24}\\$[a-f0-9]{2}\\$[a-f0-9]{120}', hashcat=22100, john='bitlocker'),
    HashInfo(algorithm='Bitcoin/Litecoin wallet.dat', verifier_regexp=r'\\$bitcoin\\$[0-9]{2,4}\\$[a-f0-9$]{250,350}', hashcat=11300, john='bitcoin'),
    HashInfo(algorithm='bcrypt $2*$, Blowfish (Unix)', verifier_regexp=r'^\$2[axyb]?\$[0-9]{2}\$[a-zA-Z0-9\./]{53}$', hashcat=3200, john='bcrypt'),
    HashInfo(algorithm='CRAM-MD5', verifier_regexp=r'^\$cram_md5\$[a-zA-Z0-9/\+=-]+\$[a-zA-Z0-9/\+=-]{52}$', hashcat=10200, john=None),
    HashInfo(algorithm='CRC32', verifier_regexp=r'^(\\$crc32\\$)?([a-f0-9]{8}.)?[a-f0-9]{8}$', hashcat=11500, john='crc32'),
    HashInfo(algorithm='Cisco-IOS $8$ (PBKDF2-SHA256)', verifier_regexp=r'^\$8\$[a-zA-Z0-9/\.]{14}\$[a-zA-Z0-9/\.]{43}$', hashcat=9200, john='cisco8'),
    HashInfo(algorithm='Cisco-IOS $9$ (scrypt)', verifier_regexp=r'^\$9\$[a-zA-Z0-9/\.]{14}\$[a-zA-Z0-9/\.]{43}$', hashcat=9300, john='cisco9'),
    HashInfo(algorithm='Cisco-ASA MD5', verifier_regexp=r'^[a-zA-Z0-9/\.]{16}(:[a-zA-Z0-9/\.]{0,16})?$', hashcat=2410, john='asa-md5'),
    HashInfo(algorithm='md5crypt, MD5 (Unix), Cisco-IOS $1$ (MD5)', verifier_regexp=r'^\$1\$[a-zA-Z0-9\/.]{0,8}\$[a-zA-Z0-9\/.]{22}(:.*)?$', hashcat=500, john='md5crypt'),
    HashInfo(algorithm='Cisco-IOS type 4 (SHA256)', verifier_regexp=r'^[a-zA-Z0-9/\.]{43}$', hashcat=5700, john=None),
    HashInfo(algorithm='Cisco-PIX MD5', verifier_regexp=r'^[a-zA-Z0-9/\.]{16}(:[a-zA-Z0-9/\.]{0,16})?$', hashcat=2400, john='pix-md5'),
    HashInfo(algorithm='Citrix NetScaler (SHA1)', verifier_regexp=r'^[a-f0-9]{49}$', hashcat=8100, john='citrix_ns10'),
    HashInfo(algorithm='descrypt, DES (Unix), Traditional DES', verifier_regexp=r'^[a-zA-Z0-9/\.]{12}[\.26AEIMQUYcgkosw]$', hashcat=1500, john='descrypt'),
    HashInfo(algorithm='DNSSEC (NSEC3)', verifier_regexp=r'^[a-z0-9]{32}(:([a-z0-9-]+\\.)?[a-z0-9-.]+\\.[a-z]{2,7}:.+:[0-9]+)?$', hashcat=8300, john=None),
    HashInfo(algorithm='Django (PBKDF2-SHA256)', verifier_regexp=r'^pbkdf2_sha256\$[0-9]+\$[a-zA-Z0-9]+\$[a-zA-Z0-9/\+=]{44}$', hashcat=10000, john='django'),
    HashInfo(algorithm='Django (SHA-1)', verifier_regexp=r'^sha1\\$[a-z0-9]+\\$[a-f0-9]{40}$', hashcat=124, john=None),
    HashInfo(algorithm='Domain Cached Credentials 2 (DCC2), MS Cache 2', verifier_regexp=r'^([^\\\\\\/:*?"<>|]{1,20}:)?(\\$DCC2\\$10240#[^\\\\\\/:*?"<>|]{1,20}#)?[a-f0-9]{32}$', hashcat=2100, john='mscach2'),
    HashInfo(algorithm='Domain Cached Credentials (DCC), MS Cache', verifier_regexp=r'^([^\\\\\\/:*?"<>|]{1,20}:)?[a-f0-9]{32}(:[^\\\\\\/:*?"<>|]{1,20})?$', hashcat=1100, john='mscach'),
    HashInfo(algorithm='md5(md5($pass))', verifier_regexp=r'^[a-f0-9]{32}$', hashcat=2600, john=None),
    HashInfo(algorithm='sha1(sha1($pass))', verifier_regexp=r'^[a-f0-9]{40}(:.+)?$', hashcat=4500, john=None),
    HashInfo(algorithm='Drupal7', verifier_regexp=r'^\$S\$[a-zA-Z0-9/\.]{52}$', hashcat=7900, john='drupal7'),
    HashInfo(algorithm='Episerver 6.x < .NET 4', verifier_regexp=r'^\$episerver\$\*0\*[a-zA-Z0-9/=\+]+\*[a-zA-Z0-9/=\+]{27,28}$', hashcat=141, john='episerver'),
    HashInfo(algorithm='Episerver 6.x >= .NET 4', verifier_regexp=r'^\$episerver\$\*1\*[a-zA-Z0-9/=\+]+\*[a-zA-Z0-9/=\+]{42,43}$', hashcat=1441, john='episerver'),
    HashInfo(algorithm='Electrum Wallet (Salt-Type 1-3)', verifier_regexp=r'^\\$electrum\\$[1-3]\\*[a-f0-9]{32,32}\\*[a-f0-9]{32,32}$', hashcat=16600, john='electrum'),
    HashInfo(algorithm='Electrum Wallet (Salt-Type 4)', verifier_regexp=r'^\\$electrum\\$4\\*[a-f0-9]{1,66}\\*[a-f0-9]{128,32768}\\*[a-f0-9]{64,64}$', hashcat=21700, john='electrum'),
    HashInfo(algorithm='Electrum Wallet (Salt-Type 5)', verifier_regexp=r'^\\$electrum\\$5\\*[a-f0-9]{66,66}\\*[a-f0-9]{2048,2048}\\*[a-f0-9]{64,64}$', hashcat=21800, john='electrum'),
    HashInfo(algorithm='Ethereum Pre-Sale Wallet, PBKDF2-HMAC-SHA256', verifier_regexp=r'\\$ethereum\\$[a-z0-9*]{150,250}', hashcat=16300, john='ethereum-presale-opencl'),
    HashInfo(algorithm='Ethereum Wallet, PBKDF2-HMAC-SHA256', verifier_regexp=r'\\$ethereum\\$[a-z0-9*]{150,250}', hashcat=15600, john='ethereum-opencl'),
    HashInfo(algorithm='FortiGate (FortiOS)', verifier_regexp=r'^[a-zA-Z0-9=]{47}$', hashcat=7000, john='fortigate'),
    HashInfo(algorithm='GOST R 34.11-94', verifier_regexp=r'^[a-f0-9]{64}(:.+)?$', hashcat=6900, john='gost'),
    HashInfo(algorithm='GRUB 2', verifier_regexp=r'^grub\\.pbkdf2\\.sha512\\.[0-9]+\\.([a-f0-9]{128,2048}\\.|[0-9]+\\.)?[a-f0-9]{128}$', hashcat=7200, john=None),
    HashInfo(algorithm='HMAC-MD5 (key = $pass)', verifier_regexp=r'^[a-f0-9]{32}:[a-z0-9]+$', hashcat=50, john='hmac-md5'),
    HashInfo(algorithm='HMAC-MD5 (key = $salt)', verifier_regexp=r'^[a-f0-9]{32}:[a-z0-9]+$', hashcat=60, john='hmac-md5'),
    HashInfo(algorithm='HMAC-SHA1 (key = $pass)', verifier_regexp=r'^[a-f0-9]{40}(:.+)?$', hashcat=150, john='hmac-sha1'),
    HashInfo(algorithm='HMAC-SHA1 (key = $salt)', verifier_regexp=r'^[a-f0-9]{40}(:.+)?$', hashcat=160, john='hmac-sha1'),
    HashInfo(algorithm='HMAC-SHA256 (key = $pass)', verifier_regexp=r'^[a-f0-9]{64}(:.+)?$', hashcat=1450, john='hmac-sha256'),
    HashInfo(algorithm='HMAC-SHA256 (key = $salt)', verifier_regexp=r'^[a-f0-9]{64}(:.+)?$', hashcat=1460, john='hmac-sha256'),
    HashInfo(algorithm='HMAC-SHA512 (key = $pass)', verifier_regexp=r'^[a-f0-9]{128}(:.+)?$', hashcat=1750, john='hmac-sha512'),
    HashInfo(algorithm='HMAC-SHA512 (key = $salt)', verifier_regexp=r'^[a-f0-9]{128}(:.+)?$', hashcat=1760, john='hmac-sha512'),
    HashInfo(algorithm='Half MD5', verifier_regexp=r'^[a-f0-9]{16}$', hashcat=5100, john=None),
    HashInfo(algorithm='IKE-PSK MD5', verifier_regexp=r'^[a-f0-9]{256}:[a-f0-9]{256}:[a-f0-9]{16}:[a-f0-9]{16}:[a-f0-9]{320}:[a-f0-9]{16}:[a-f0-9]{40}:[a-f0-9]{40}:[a-f0-9]{32}$', hashcat=5300, john=None),
    HashInfo(algorithm='IKE-PSK SHA1', verifier_regexp=r'^[a-f0-9]{256}:[a-f0-9]{256}:[a-f0-9]{16}:[a-f0-9]{16}:[a-f0-9]{320}:[a-f0-9]{16}:[a-f0-9]{40}:[a-f0-9]{40}:[a-f0-9]{40}$', hashcat=5400, john=None),
    HashInfo(algorithm='IPMI2 RAKP HMAC-SHA1', verifier_regexp=r'^[a-f0-9]{130}(:[a-f0-9]{40})?$', hashcat=7300, john=None),
    HashInfo(algorithm='Joomla < 2.5.18', verifier_regexp=r'^[a-f0-9]{32}:[a-z0-9]{32}$', hashcat=11, john=None),
    HashInfo(algorithm='Juniper NetScreen/SSG (ScreenOS)', verifier_regexp=r'^(\.\+\$)?[a-zA-Z0-9/\.\+]{30}(:.+)?$', hashcat=22, john='md5ns'),
    HashInfo(algorithm='Keccak-224', verifier_regexp=r'^[a-f0-9]{56}$', hashcat=17700, john=None),
    HashInfo(algorithm='Keccak-256', verifier_regexp=r'^[a-f0-9]{64}$', hashcat=17800, john=None),
    HashInfo(algorithm='Keccak-384', verifier_regexp=r'^[a-f0-9]{96}$', hashcat=17900, john=None),
    HashInfo(algorithm='Keccak-512', verifier_regexp=r'^[a-f0-9]{128}(:.+)?$', hashcat=18000, john=None),
    HashInfo(algorithm='Keepass 1 AES / without keyfile', verifier_regexp=r'^\\$keepass\\$\\*1\\*50000\\*(0|1)\\*([a-f0-9]{32})\\*([a-f0-9]{64})\\*([a-f0-9]{32})\\*([a-f0-9]{64})\\*1\\*(192|1360)\\*([a-f0-9]{384})$', hashcat=13400, john=None),
    HashInfo(algorithm='Kerberos 5, etype 23, AS-REP', verifier_regexp=r'^\\$krb5asrep\\$23\\$[^:]+:[a-f0-9]{32,32}\\$[a-f0-9]{64,40960}$', hashcat=18200, john='krb5pa-sha1'),
    HashInfo(algorithm='Kerberos 5, etype 23, AS-REQ Pre-Auth', verifier_regexp=r'^\\$(krb5pa|mskrb5)\\$(23)?\\$.+\\$[a-f0-9]{1,}$', hashcat=7500, john='krb5pa-md5'),
    HashInfo(algorithm='Kerberos 5, etype 17, TGS-REP (AES128-CTS-HMAC-SHA1-96)', verifier_regexp=r'^\\$krb5tgs\\$17\\$[^$]{1,512}\\$[^$]{1,512}\\$[^$]{1,4}?\\$?[a-f0-9]{1,32}\\$[a-f0-9]{64,40960}$', hashcat=19600, john=None),
    HashInfo(algorithm='Kerberos 5, etype 18, TGS-REP (AES256-CTS-HMAC-SHA1-96)', verifier_regexp=r'^\\$krb5tgs\\$18\\$[^$]{1,512}\\$[^$]{1,512}\\$[^$]{1,4}?\\$?[a-f0-9]{1,32}\\$[a-f0-9]{64,40960}', hashcat=19700, john=None),
    HashInfo(algorithm='Kerberos 5, etype 23, TGS-REP', verifier_regexp=r'\\$krb5tgs\\$23\\$\\*[^*]*\\*\\$[a-f0-9]{32}\\$[a-f0-9]{64,40960}', hashcat=13100, john='krb5tgs'),
    HashInfo(algorithm='Kerberos 5, etype 17, Pre-Auth', verifier_regexp=r'^\\$krb5pa\\$17\\$[^$]{1,512}\\$[^$]{1,512}\\$[a-f0-9]{104,112}$', hashcat=19800, john=None),
    HashInfo(algorithm='Kerberos 5, etype 18, Pre-Auth', verifier_regexp=r'^\\$krb5pa\\$18\\$[^$]{1,512}\\$[^$]{1,512}\\$[a-f0-9]{104,112}$', hashcat=19900, john=None),
    HashInfo(algorithm='SSHA-512(Base64), LDAP {SSHA512}', verifier_regexp=r'^SSHA512[a-zA-Z0-9\\/+=]{96,110}$', hashcat=1711, john='ssha512'),
    HashInfo(algorithm='LM', verifier_regexp=r'^[a-f0-9]{16}$', hashcat=3000, john='lm'),
    HashInfo(algorithm='LastPass + LastPass sniffed', verifier_regexp=r'^[a-f0-9]{32}:[0-9]+:[a-z0-9_.+-]+@[a-z0-9-]+\\.[a-z0-9-.]+$', hashcat=6800, john=None),
    HashInfo(algorithm='Lotus Notes/Domino 5', verifier_regexp=r'^[a-f0-9]{32}$', hashcat=8600, john='lotus5'),
    HashInfo(algorithm='Lotus Notes/Domino 6', verifier_regexp=r'^\([a-zA-Z0-9/\+]{20}\)$', hashcat=8700, john='dominosec'),
    HashInfo(algorithm='Lotus Notes/Domino 8', verifier_regexp=r'^\([a-zA-Z0-9/\+]{49}\)$', hashcat=9100, john=None),
    HashInfo(algorithm='MD4', verifier_regexp=r'^[a-f0-9]{32}$', hashcat=900, john='raw-md4'),
    HashInfo(algorithm='MD5', verifier_regexp=r'^[a-f0-9]{32}$', hashcat=0, john='raw-md5'),
    HashInfo(algorithm='iSCSI CHAP authentication, MD5(CHAP)', verifier_regexp=r'^(\\$chap\\$0\\*)?[a-f0-9]{32}[\\*:][a-f0-9]{32}(:[0-9]{2})?$', hashcat=4800, john='chap'),
    HashInfo(algorithm='MSSQL (2000)', verifier_regexp=r'^0x0100[a-f0-9]{88}$', hashcat=131, john='mssql'),
    HashInfo(algorithm='MSSQL (2005)', verifier_regexp=r'^0x0100[a-f0-9]{48}$', hashcat=132, john='mssql05'),
    HashInfo(algorithm='MSSQL (2012, 2014)', verifier_regexp=r'^0x0200[a-f0-9]{136}$', hashcat=1731, john='mssql12'),
    HashInfo(algorithm='MediaWiki B type', verifier_regexp=r'^[:\\$][AB][:\\$]([a-f0-9]{1,8}[:\\$])?[a-f0-9]{32}$', hashcat=3711, john='mediawiki'),
    HashInfo(algorithm='MS Office 2007', verifier_regexp=NULL_REX, hashcat=9400, john='office'),
    HashInfo(algorithm='MS Office 2010', verifier_regexp=r'^\\$office\\$\\*2010\\*[0-9]{6}\\*[0-9]{3}\\*[0-9]{2}\\*[a-z0-9]{32}\\*[a-z0-9]{32}\\*[a-z0-9]{64}$', hashcat=9500, john='office'),
    HashInfo(algorithm='MS Office 2013', verifier_regexp=r'^\\$office\\$\\*2013\\*[0-9]{6}\\*[0-9]{3}\\*[0-9]{2}\\*[a-z0-9]{32}\\*[a-z0-9]{32}\\*[a-z0-9]{64}$', hashcat=9600, john='office'),
    HashInfo(algorithm='MS Office 2016 - SheetProtection', verifier_regexp=r'^\\\\$office\\\\$2016\\\\$[0-9]\\\\$[0-9]{6}\\\\$[^$]{24}\\\\$[^$]{88}$', hashcat=25300, john=None),
    HashInfo(algorithm='MS Office ⇐ 2003 MD5 + RC4, oldoffice$0, oldoffice$1', verifier_regexp=r'^\\$oldoffice\\$[01]\\*[a-f0-9]{32}\\*[a-f0-9]{32}\\*[a-f0-9]{32}$', hashcat=9700, john='oldoffice'),
    HashInfo(algorithm='MS Office ⇐ 2003 SHA1 + RC4, oldoffice$3, oldoffice$4', verifier_regexp=r'^\\$oldoffice\\$[34]\\*[a-f0-9]{32}\\*[a-f0-9]{32}\\*[a-f0-9]{40}$', hashcat=9800, john='oldoffice'),
    HashInfo(algorithm='AuthMe sha256', verifier_regexp=r'^\$SHA\$[a-zA-Z0-9]{1,16}\$([a-f0-9]{32}|[a-f0-9]{40}|[a-f0-9]{64}|[a-f0-9]{128}|[a-f0-9]{140})$', hashcat=20711, john=None),
    HashInfo(algorithm='MyBB 1.2+, IPB2+ (Invision Power Board)', verifier_regexp=r'^[a-f0-9]{32}:.{8}$', hashcat=2811, john=None),
    HashInfo(algorithm='MySQL CRAM (SHA1)', verifier_regexp=r'^\\$mysqlna\\$[a-f0-9]{40}[:*][a-f0-9]{40}$', hashcat=11200, john=None),
    HashInfo(algorithm='MySQL323', verifier_regexp=r'^[a-f0-9]{16}$', hashcat=200, john='mysql'),
    HashInfo(algorithm='MySQL4.1/MySQL5', verifier_regexp=r'^[a-f0-9]{40}$', hashcat=300, john='mysql-sha1'),
    HashInfo(algorithm='NTLM', verifier_regexp=r'^(\\$NT\\$)?[a-f0-9]{32}$', hashcat=1000, john='nt'),
    HashInfo(algorithm='NetNTLMv1 / NetNTLMv1+ESS', verifier_regexp=r'^[^\\\\\\/:*?"<>|]{1,20}[:]{2,3}([^\\\\\\/:*?"<>|]{1,20})?:[a-f0-9]{48}:[a-f0-9]{48}:[a-f0-9]{16}$', hashcat=5500, john='netntlm'),
    HashInfo(algorithm='NetNTLMv2', verifier_regexp=r'^([^\\\\\\/:*?"<>|]{1,20}\\\\)?[^\\\\\\/:*?"<>|]{1,20}[:]{2,3}([^\\\\\\/:*?"<>|]{1,20}:)?[^\\\\\\/:*?"<>|]{1,20}:[a-f0-9]{32}:[a-f0-9]+$', hashcat=5600, john='netntlmv2'),
    HashInfo(algorithm='nsldap, SHA-1(Base64), Netscape LDAP SHA', verifier_regexp=r'^SHA[a-zA-Z0-9/\+]{27}=$', hashcat=101, john='nsldap'),
    HashInfo(algorithm='nsldaps, SSHA-1(Base64), Netscape LDAP SSHA', verifier_regexp=r'^SSHA[a-zA-Z0-9/\+]{38}==$', hashcat=111, john='nsldaps'),
    HashInfo(algorithm='macOS v10.4, macOS v10.5, macOS v10.6', verifier_regexp=r'^[a-f0-9]{48}$', hashcat=122, john='xsha'),
    HashInfo(algorithm='macOS v10.7', verifier_regexp=r'^[a-f0-9]{136}$', hashcat=1722, john='xsha512'),
    HashInfo(algorithm='macOS v10.8+ (PBKDF2-SHA512)', verifier_regexp=r'^\\$ml\\$[0-9]+\\$[a-f0-9]{64}\\$[a-f0-9]{128}$', hashcat=7100, john='pbkdf2-hmac-sha512'),
    HashInfo(algorithm='Open Document Format (ODF) 1.2 (SHA-256, AES)', verifier_regexp=r'^\\$odf\\$\\*1\\*1\\*100000\\*32\\*[a-f0-9]{64}\\*16\\*[a-f0-9]{32}\\*16\\*[a-f0-9]{32}\\*0\\*[a-f0-9]{2048}$', hashcat=18400, john=None),
    HashInfo(algorithm='Oracle S: Type (Oracle 11+)', verifier_regexp=r'^(S:)?[a-f0-9]{40}(:)?[a-f0-9]{20}$', hashcat=112, john='oracle11'),
    HashInfo(algorithm='Oracle H: Type (Oracle 7+)', verifier_regexp=r'^[A-F0-9]{16}:[A-F0-9]{0,30}$', hashcat=3100, john=None),
    HashInfo(algorithm='PBKDF2-HMAC-SHA256', verifier_regexp=r'^sha256[:\$][0-9]+[:\$][a-zA-Z0-9/\+=]+[:\$][a-zA-Z0-9/\+]{32,128}$', hashcat=10900, john=None),
    HashInfo(algorithm='Python passlib pbkdf2-sha1', verifier_regexp=r'^\$pbkdf2(-sha1)?\$[0-9]+\$[a-zA-Z0-9/\.]+\$[a-zA-Z0-9/\.]{27}$', hashcat=20400, john=None),
    HashInfo(algorithm='Python passlib pbkdf2-sha256', verifier_regexp=r'^\$pbkdf2-sha256\$[0-9]+\$[a-zA-Z0-9/\.]+\$[a-zA-Z0-9/\.]{43}$', hashcat=20300, john='pbkdf2-hmac-sha256'),
    HashInfo(algorithm='Python passlib pbkdf2-sha512', verifier_regexp=r'^\$pbkdf2-sha512\$[0-9]+\$[a-zA-Z0-9/\.]+\$[a-zA-Z0-9/\.]{86}$', hashcat=20200, john=None),
    HashInfo(algorithm='PDF 1.1 - 1.3 (Acrobat 2 - 4)', verifier_regexp=NULL_REX, hashcat=10400, john='pdf'),
    HashInfo(algorithm='PDF 1.4 - 1.6 (Acrobat 5 - 8)', verifier_regexp=NULL_REX, hashcat=10500, john='pdf'),
    HashInfo(algorithm='PDF 1.7 Level 3 (Acrobat 9)', verifier_regexp=NULL_REX, hashcat=10600, john='pdf'),
    HashInfo(algorithm='PDF 1.7 Level 8 (Acrobat 10 - 11)', verifier_regexp=NULL_REX, hashcat=10700, john='pdf'),
    HashInfo(algorithm='PHPS', verifier_regexp=r'^\\$PHPS\\$.+\\$[a-f0-9]{32}$', hashcat=2612, john='phps'),
    HashInfo(algorithm='PKZIP Master Key (6 byte optimization)', verifier_regexp=r'^[a-f0-9]{24}$', hashcat=20510, john=None),
    HashInfo(algorithm='PKZIP Master Key', verifier_regexp=r'^[a-f0-9]{24}$', hashcat=20500, john=None),
    HashInfo(algorithm='PeopleSoft', verifier_regexp=r'^[a-zA-Z0-9/\+]{27}=$', hashcat=133, john=None),
    HashInfo(algorithm='PostgreSQL CRAM (MD5)', verifier_regexp=r'^\\$postgres\\$.[^\\*]+[*:][a-f0-9]{1,32}[*:][a-f0-9]{32}$', hashcat=11100, john='postgres'),
    HashInfo(algorithm='PrestaShop', verifier_regexp=r'^[a-f0-9]{32}:[a-zA-Z0-9]{56}$', hashcat=11000, john=None),
    HashInfo(algorithm='RACF', verifier_regexp=r'\\$racf\\$\\*.{1,}\\*[A-F0-9]{16}', hashcat=8500, john=None),
    HashInfo(algorithm='RAR3-p (Uncompressed)', verifier_regexp=NULL_REX, hashcat=23700, john=None),
    HashInfo(algorithm='Radmin2', verifier_regexp=r'^(\\$radmin2\\$)?[a-f0-9]{32}$', hashcat=9900, john='radmin'),
    HashInfo(algorithm='RIPEMD-160', verifier_regexp=r'^[a-f0-9]{40}(:.+)?$', hashcat=6000, john='ripemd-160'),
    HashInfo(algorithm='RSA/DSA/EC/OpenSSH Private Keys ($4$)', verifier_regexp=r'^\$sshng\$4\$16\$[0-9]{32}\$1232\$[a-f0-9]{2464}$', hashcat=22941, john=None),
    HashInfo(algorithm='Redmine', verifier_regexp=r'^[a-f0-9]{40}:[a-f0-9]{0,32}$', hashcat=4521, john=None),
    HashInfo(algorithm='SAP CODVN B (BCODE)', verifier_regexp=r'^(.+)?\$[A-F0-9]{16}$', hashcat=7700, john='sapb'),
    HashInfo(algorithm='SAP CODVN F/G (PASSCODE)', verifier_regexp=r'^(.+)?\$[A-F0-9]{40}$', hashcat=7800, john='sapg'),
    HashInfo(algorithm='SAP CODVN H (PWDSALTEDHASH) iSSHA-1', verifier_regexp=r'^x-issha, [0-9]{4}[a-zA-Z0-9/\+=]+$', hashcat=10300, john='saph'),
    HashInfo(algorithm='Juniper/NetBSD sha1crypt', verifier_regexp=r'^\$sha1\$[0-9]+\$[a-zA-Z0-9/\.]{0,64}\$[a-zA-Z0-9/\.]{28}$', hashcat=15100, john='sha1crypt'),
    HashInfo(algorithm='SHA1', verifier_regexp=r'^[a-f0-9]{40}(:.+)?$', hashcat=100, john='raw-sha1'),
    HashInfo(algorithm='SHA2-224', verifier_regexp=r'^[a-f0-9]{56}$', hashcat=1300, john='raw-sha224'),
    HashInfo(algorithm='sha256crypt $5$, SHA256 (Unix)', verifier_regexp=r'^\$5\$(rounds=[0-9]+\$)?([\./0-9A-Za-z]{0,16}\$)?[a-zA-Z0-9\./]{43}$', hashcat=7400, john='sha256crypt'),
    HashInfo(algorithm='SHA2-256', verifier_regexp=r'^[a-f0-9]{64}(:.+)?$', hashcat=1400, john='raw-sha256'),
    HashInfo(algorithm='SHA2-384', verifier_regexp=r'^[a-f0-9]{96}$', hashcat=10800, john='raw-sha384'),
    HashInfo(algorithm='sha512crypt $6$, SHA512 (Unix)', verifier_regexp=r'^\$6\$(rounds=[0-9]+\$)?([./0-9A-Za-z]{0,16}\$)?[\./0-9A-Za-z]{86}$', hashcat=1800, john='sha512crypt'),
    HashInfo(algorithm='SHA2-512', verifier_regexp=r'^[a-f0-9]{128}(:.+)?$', hashcat=1700, john='raw-sha512'),
    HashInfo(algorithm='SHA3-224', verifier_regexp=r'^[a-f0-9]{56}$', hashcat=17300, john=None),
    HashInfo(algorithm='SHA3-256', verifier_regexp=r'^[a-f0-9]{64}(:.+)?$', hashcat=17400, john='dynamic_380'),
    HashInfo(algorithm='SHA3-512', verifier_regexp=r'^[a-f0-9]{128}(:.+)?$', hashcat=17600, john='raw-sha3'),
    HashInfo(algorithm='SMF (Simple Machines Forum) > v1.1', verifier_regexp=r'^[a-f0-9]{40}:[^*]{1,25}$', hashcat=121, john=None),
    HashInfo(algorithm='SecureZIP AES-128', verifier_regexp=r'\\$zip3\\$\\*[0-9]\\*[0-9]\\*128\\*[0-9]\\*[a-f0-9]{0,32}\\*[a-f0-9]{288}\\*[0-9]\\*[0-9]\\*[0-9]\\*[^\\s]{0,64}', hashcat=23001, john='securezip'),
    HashInfo(algorithm='SecureZIP AES-192', verifier_regexp=r'\\$zip3\\$\\*[0-9]\\*[0-9]\\*192\\*[0-9]\\*[a-f0-9]{0,32}\\*[a-f0-9]{288}\\*[0-9]\\*[0-9]\\*[0-9]\\*[^\\s]{0,64}', hashcat=23002, john='securezip'),
    HashInfo(algorithm='SecureZIP AES-256', verifier_regexp=r'\\$zip3\\$\\*[0-9]\\*[0-9]\\*256\\*[0-9]\\*[a-f0-9]{0,32}\\*[a-f0-9]{288}\\*[0-9]\\*[0-9]\\*[0-9]\\*[^\\s]{0,64}', hashcat=23003, john='securezip'),
    HashInfo(algorithm='SipHash', verifier_regexp=r'^[a-f0-9]{16}:2:4:[a-f0-9]{32}$', hashcat=10100, john=None),
    HashInfo(algorithm='Skype', verifier_regexp=r'^[a-f0-9]{32}:[a-z0-9]+$', hashcat=23, john=None),
    HashInfo(algorithm='Sybase ASE', verifier_regexp=r'^0x[a-f0-9]{4}[a-f0-9]{16}[a-f0-9]{64}$', hashcat=8000, john='sybasease'),
    HashInfo(algorithm='Telegram Mobile App Passcode (SHA256)', verifier_regexp=r'\\$telegram\\$[a-f0-9*]{99}', hashcat=22301, john='Telegram'),
    HashInfo(algorithm='Whirlpool', verifier_regexp=r'^[a-f0-9]{128}(:.+)?$', hashcat=6100, john='whirlpool'),
    HashInfo(algorithm='WinZip', verifier_regexp=r'\\$zip2\\$\\*[0-9]{1}\\*[0-9]{1}\\*[0-9]{1}\\*[a-f0-9]{16,32}\\*[a-f0-9]{1,6}\\*[a-f0-9]{1,6}\\*[a-f0-9]{0,16384}\\*[a-f0-9]{20}\\*\\$\\/zip2\\$', hashcat=13600, john='zip'),
    HashInfo(algorithm='WBB3 (Woltlab Burning Board)', verifier_regexp=r'^(\\$wbb3\\$\\*1\\*)?[a-f0-9]{40}[:*][a-f0-9]{40}$', hashcat=8400, john='wbb3'),
    HashInfo(algorithm='hMailServer', verifier_regexp=r'^[a-f0-9]{70}$', hashcat=1421, john='hmailserver'),
    HashInfo(algorithm='iTunes backup < 10.0', verifier_regexp=r'\\$itunes_backup\\$\\*[0-9]{1,2}\\*[a-f0-9]{80}\\*[0-9]{1,6}\\*[a-f0-9]{40}\\*[0-9]{0,10}\\*[a-f0-9]{0,40}', hashcat=14700, john='itunes-backup'),
    HashInfo(algorithm='iTunes backup >= 10.0', verifier_regexp=r'\\$itunes_backup\\$\\*[0-9]{1,2}\\*[a-f0-9]{80}\\*[0-9]{1,6}\\*[a-f0-9]{40}\\*[0-9]{0,10}\\*[a-f0-9]{0,40}', hashcat=14800, john='itunes-backup'),
    HashInfo(algorithm='md5($pass.$salt)', verifier_regexp=r'^[a-f0-9]{32}:[a-z0-9]+$', hashcat=10, john=None),
    HashInfo(algorithm='md5($salt.$pass)', verifier_regexp=r'^[a-f0-9]{32}:[a-z0-9]+$', hashcat=20, john=None),
    HashInfo(algorithm='md5($salt.$pass.$salt)', verifier_regexp=r'^[a-f0-9]{32}:[a-z0-9]+$', hashcat=3800, john=None),
    HashInfo(algorithm='md5($salt.md5($pass))', verifier_regexp=r'^[a-f0-9]{32}:[a-z0-9]+$', hashcat=3710, john=None),
    HashInfo(algorithm='md5($salt.md5($pass.$salt))', verifier_regexp=r'^[a-f0-9]{32}:[a-z0-9]+$', hashcat=4110, john=None),
    HashInfo(algorithm='md5($salt.md5($salt.$pass))', verifier_regexp=r'^[a-f0-9]{32}:[a-z0-9]+$', hashcat=4010, john=None),
    HashInfo(algorithm='md5($salt.utf16le($pass))', verifier_regexp=r'^[a-f0-9]{32}:[a-z0-9]+$', hashcat=40, john=None),
    HashInfo(algorithm='md5(md5($pass).md5($salt))', verifier_regexp=r'^[a-f0-9]{32}:[a-z0-9]+$', hashcat=3910, john=None),
    HashInfo(algorithm='md5(md5(md5($pass)))', verifier_regexp=r'^[a-f0-9]{32}$', hashcat=3500, john=None),
    HashInfo(algorithm='md5(sha1($pass))', verifier_regexp=r'^[a-f0-9]{32}$', hashcat=4400, john=None),
    HashInfo(algorithm='md5(utf16le($pass).$salt)', verifier_regexp=r'^[a-f0-9]{32}:[a-z0-9]+$', hashcat=30, john=None),
    HashInfo(algorithm='md5(strtoupper(md5($pass)))', verifier_regexp=r'^[a-f0-9]{32}$', hashcat=4300, john=None),
    HashInfo(algorithm='osCommerce, xt:Commerce', verifier_regexp=r'^[a-f0-9]{32}:[a-z0-9]{2}$', hashcat=21, john=None),
    HashInfo(algorithm='scrypt', verifier_regexp=r'^SCRYPT:[0-9]+:[0-9]+:[0-9]+:[a-zA-Z0-9:/\+=]+$', hashcat=8900, john=None),
    HashInfo(algorithm='sha1($pass.$salt)', verifier_regexp=r'^[a-f0-9]{40}(:.+)?$', hashcat=110, john=None),
    HashInfo(algorithm='sha1($salt.$pass)', verifier_regexp=r'^[a-f0-9]{40}(:.+)?$', hashcat=120, john=None),
    HashInfo(algorithm='sha1($salt.$pass.$salt)', verifier_regexp=r'^[a-f0-9]{40}(:.+)?$', hashcat=4900, john=None),
    HashInfo(algorithm='sha1($salt.utf16le($pass))', verifier_regexp=r'^[a-f0-9]{40}(:.+)?$', hashcat=140, john=None),
    HashInfo(algorithm='sha1(md5($pass))', verifier_regexp=r'^[a-f0-9]{40}(:.+)?$', hashcat=4700, john=None),
    HashInfo(algorithm='sha1(utf16le($pass).$salt)', verifier_regexp=r'^[a-f0-9]{40}(:.+)?$', hashcat=130, john=None),
    HashInfo(algorithm='sha256($pass.$salt)', verifier_regexp=r'^[a-f0-9]{64}(:.+)?$', hashcat=1410, john='dynamic_62'),
    HashInfo(algorithm='sha256($salt.$pass)', verifier_regexp=r'^[a-f0-9]{64}(:.+)?$', hashcat=1420, john='dynamic_61'),
    HashInfo(algorithm='sha256($salt.utf16le($pass))', verifier_regexp=r'^[a-f0-9]{64}(:.+)?$', hashcat=1440, john=None),
    HashInfo(algorithm='sha256(utf16le($pass).$salt)', verifier_regexp=r'^[a-f0-9]{64}(:.+)?$', hashcat=1430, john=None),
    HashInfo(algorithm='sha512($pass.$salt)', verifier_regexp=r'^[a-f0-9]{128}(:.+)?$', hashcat=1710, john=None),
    HashInfo(algorithm='sha512($salt.$pass)', verifier_regexp=r'^[a-f0-9]{128}(:.+)?$', hashcat=1720, john=None),
    HashInfo(algorithm='sha512($salt.utf16le($pass))', verifier_regexp=r'^[a-f0-9]{128}(:.+)?$', hashcat=1740, john=None),
    HashInfo(algorithm='sha512(utf16le($pass).$salt)', verifier_regexp=r'^[a-f0-9]{128}(:.+)?$', hashcat=1730, john=None),
    HashInfo(algorithm='vBulletin < v3.8.5', verifier_regexp=r'^[a-f0-9]{32}:.{3}$', hashcat=2611, john=None),
    HashInfo(algorithm='vBulletin >= v3.8.5', verifier_regexp=r'^[a-f0-9]{32}:.{30}$', hashcat=2711, john=None),
    HashInfo(algorithm='WPA-PBKDF2-PMKID+EAPOL', verifier_regexp=r'^WPA\*[0-9]{2}\*[a-f0-9]{32}\*([a-f0-9\*]+){0,12}[a-f0-9]*$', hashcat=22000, john=None),
    HashInfo(algorithm='WPA-PMK-PMKID+EAPOL', verifier_regexp=r'^WPA\*[0-9]{2}\*[a-f0-9]{32}\*([a-f0-9\*]+){0,12}[a-f0-9]*$', hashcat=22001, john=None),
]
# flake8: qa


def hashes_check(hash: str, type_hash: str) -> str | None:

    err_raw: list = []

    for it in HASH_PROTOTYPES:

        if str(it.hashcat) == type_hash:

            if not verify_hash(verifier_regexp=it.verifier_regexp, hash_string=hash):
                err_raw.append(f'hash: {hash}')

    if err_raw:
        err_msg = 'Верификация Провалена! \n'
        err_msg += "\n".join(err_raw)
        return err_msg

    return None

def verify_hash(verifier_regexp: str, hash_string: str) -> bool:

    if verifier_regexp == NULL_REX:
        return True

    _regexp = re.compile(verifier_regexp)

    if not _regexp.match(hash_string):
        return False

    return True
    


if __name__ == '__main__':

    parser = argparse.ArgumentParser()
    parser.add_argument('--hash')
    parser.add_argument('--code')
    args = parser.parse_args()

    hash = args.hash
    code = args.code

    raw = hashes_check(hash=hash, type_hash=code)

    print(raw)
